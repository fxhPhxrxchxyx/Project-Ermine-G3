{"ast":null,"code":"var _jsxFileName = \"/Users/phurichayakhemvaraporn/Hello Ermine/project/helloermine-web-3-shepherdBoy/src/NavBarLink.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBarLink = ({\n  href,\n  childrenavigator,\n  isactive,\n  children\n}) => {\n  _s();\n\n  const [ishover, setishover] = useState(isactive || false);\n  const [isnow, setisnow] = useState(false);\n\n  const listenToPopstate = () => {\n    const winPath = window.location.hash;\n\n    if (winPath === href) {\n      setisnow(true);\n    } else {\n      setisnow(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"popstate\", listenToPopstate);\n    return () => {\n      window.removeEventListener(\"popstate\", listenToPopstate);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      padding: \"14px 16px\"\n    },\n    onMouseEnter: isactive ? () => {} : () => setishover(true),\n    onMouseLeave: isactive ? () => {} : () => setishover(false),\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: isnow ? 'bg-isonselected' : ishover ? 'bg-active' : 'bg',\n      href: href,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBarLink, \"Z2TlprF36bP88IlrdTNGbmYxzBw=\");\n\n_c = NavBarLink;\nexport default NavBarLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBarLink\");","map":{"version":3,"sources":["/Users/phurichayakhemvaraporn/Hello Ermine/project/helloermine-web-3-shepherdBoy/src/NavBarLink.js"],"names":["React","Component","useEffect","useState","NavBarLink","href","childrenavigator","isactive","children","ishover","setishover","isnow","setisnow","listenToPopstate","winPath","window","location","hash","addEventListener","removeEventListener","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,gBAAR;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAD,KAAoD;AAAA;;AACnE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACI,QAAQ,IAAI,KAAb,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMU,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC;;AACA,QAAIH,OAAO,KAAKT,IAAhB,EAAsB;AAClBO,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GAPD;;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACG,gBAAP,CAAwB,UAAxB,EAAoCL,gBAApC;AACA,WAAO,MAAM;AACTE,MAAAA,MAAM,CAACI,mBAAP,CAA2B,UAA3B,EAAuCN,gBAAvC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAI,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAqC,IAAA,YAAY,EAAEb,QAAQ,GAAG,MAAM,CAAG,CAAZ,GAAe,MAAMG,UAAU,CAAC,IAAD,CAA1F;AAAkG,IAAA,YAAY,EAAEH,QAAQ,GAAG,MAAM,CAAG,CAAZ,GAAe,MAAMG,UAAU,CAAC,KAAD,CAAvJ;AAAA,2BACI;AAAG,MAAA,SAAS,EAAEC,KAAK,GAAG,iBAAH,GAAuBF,OAAO,GAAG,WAAH,GAAiB,IAAlE;AAAwE,MAAA,IAAI,EAAEJ,IAA9E;AAAA,gBAAqFG;AAArF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMJ,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nconst NavBarLink = ({ href, childrenavigator, isactive, children }) => {\n    const [ishover, setishover] = useState(isactive || false);\n    const [isnow, setisnow] = useState(false)\n    const listenToPopstate = () => {\n        const winPath = window.location.hash;\n        if (winPath === href) {\n            setisnow(true)\n        } else {\n            setisnow(false)\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"popstate\", listenToPopstate);\n        return () => {\n            window.removeEventListener(\"popstate\", listenToPopstate);\n        };\n    }, []);\n\n    return (\n        <li style={{ padding: \"14px 16px\" }} onMouseEnter={isactive ? () => { } : () => setishover(true)} onMouseLeave={isactive ? () => { } : () => setishover(false)} >\n            <a className={isnow ? 'bg-isonselected' : ishover ? 'bg-active' : 'bg'} href={href}>{children}</a>\n        </li>\n    )\n}\n\nexport default NavBarLink"]},"metadata":{},"sourceType":"module"}